I"B<h2 id="introduction"><strong>Introduction</strong></h2>

<ul>
  <li>해당 프로젝트는 강화학습 알고리즘 중 DDPG(Deep Deterministic Policy Gradient)라는 알고리즘을 자율주행 자동차 task에 적용하는 내용으로 진행되었습니다.</li>
  <li>본 프로젝트에서 정의하는 문제는, 물리 엔진 (Bullet 2.78)이 장착된 simulator 상에서 차량의 모델이 주어진다고 할 때, lane으로부터의 이탈없이 특정 goal까지 최대한 빠르게 이동하는 것이었습니다.</li>
  <li>본 프로젝트에서는 Policy Gradient 기반의 강화학습 알고리즘인 DDPG 알고리즘이 사용되었습니다. Policy Gradient 계열의 강화학습 알고리즘은 objective function의 미분 값을 바탕으로 gradient ascent 기법을 활용하여 가장 큰 return 값을 줄 수 있는 policy를 찾는 최적화 알고리즘입니다.</li>
  <li>기존 DQN 기법에서는 high-dimensional한 input을 사용할 수는 있었지만, discrete하고 차원이 낮은 action space를 지닌 task만 해결 가능했었습니다. 따라서, DQN에서는 시스템 action의 종류가 늘어날수록 차원의 저주에 걸린다는 문제점이 있었습니다. 이를 해결하고자, Deep Neural Network로 근사화한 action-value function을 사용하는 Model-free, Off-policy Actor-Critic 알고리즘을 제안하였고, 이 알고리즘의 이름을 <strong>Deep Deterministic Policy Gradient(DDPG)</strong>라고 명명했습니다.</li>
</ul>

<p><img src="/assets/img/minerl.gif" width="60%" height="60%" alt="Markdown Monster icon" style="float: center;" /></p>

<p><a href="https://www.aicrowd.com/challenges/neurips-2021-minerl-diamond-competition">LINK</a></p>

<h2 id="task"><strong>Task</strong></h2>

<p>The task of the competition is solving the MineRLObtainDiamond-v0 environment (or MineRLObtainDiamondVectorObf-v0 for Research track). In this environment, the agent begins in a random starting location without any items, and is tasked with obtaining a diamond. This task can only be accomplished by navigating the complex item hierarchy of Minecraft.</p>

<p><img src="/assets/img/task.png" width="80%" height="80%" alt="Markdown Monster icon" style="float: center;" /></p>

<p>The agent receives a high reward for obtaining a diamond as well as smaller, auxiliary rewards for obtaining prerequisite items. In addition to the main environment, we provide a number of auxiliary environments. These consist of tasks which are either subtasks of ObtainDiamond or other tasks within Minecraft.</p>

<h2 id="minerlobtaindiamond-v0"><strong>MineRLObtainDiamond-v0</strong></h2>

<p><img src="/assets/img/diamond1.gif" width="10%" height="10%" alt="Markdown Monster icon" style="float: center;" />
<img src="/assets/img/diamond2.gif" width="10%" height="10%" alt="Markdown Monster icon" style="float: center;" />
<img src="/assets/img/diamond3.gif" width="10%" height="10%" alt="Markdown Monster icon" style="float: center;" />
<img src="/assets/img/diamond4.gif" width="10%" height="10%" alt="Markdown Monster icon" style="float: center;" /></p>

<p>In this environment the agent is required to obtain a diamond. The agent begins in a random starting location on a random survival map without any items, matching the normal starting conditions for human players in Minecraft. The agent is given access to a selected summary of its inventory and GUI free crafting, smelting, and inventory management actions.</p>

<p>During an episode the agent is rewarded only once per item the first time it obtains that item in the requisite item hierarchy to obtaining a diamond. The rewards for each item are given here:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;</span><span class="no">Item</span> <span class="n">reward</span><span class="o">=</span><span class="s2">"1"</span> <span class="n">type</span><span class="o">=</span><span class="s2">"log"</span> <span class="o">/&gt;</span>
<span class="o">&lt;</span><span class="no">Item</span> <span class="n">reward</span><span class="o">=</span><span class="s2">"2"</span> <span class="n">type</span><span class="o">=</span><span class="s2">"planks"</span> <span class="o">/&gt;</span>
<span class="o">&lt;</span><span class="no">Item</span> <span class="n">reward</span><span class="o">=</span><span class="s2">"4"</span> <span class="n">type</span><span class="o">=</span><span class="s2">"stick"</span> <span class="o">/&gt;</span>
<span class="o">&lt;</span><span class="no">Item</span> <span class="n">reward</span><span class="o">=</span><span class="s2">"4"</span> <span class="n">type</span><span class="o">=</span><span class="s2">"crafting_table"</span> <span class="o">/&gt;</span>
<span class="o">&lt;</span><span class="no">Item</span> <span class="n">reward</span><span class="o">=</span><span class="s2">"8"</span> <span class="n">type</span><span class="o">=</span><span class="s2">"wooden_pickaxe"</span> <span class="o">/&gt;</span>
<span class="o">&lt;</span><span class="no">Item</span> <span class="n">reward</span><span class="o">=</span><span class="s2">"16"</span> <span class="n">type</span><span class="o">=</span><span class="s2">"cobblestone"</span> <span class="o">/&gt;</span>
<span class="o">&lt;</span><span class="no">Item</span> <span class="n">reward</span><span class="o">=</span><span class="s2">"32"</span> <span class="n">type</span><span class="o">=</span><span class="s2">"furnace"</span> <span class="o">/&gt;</span>
<span class="o">&lt;</span><span class="no">Item</span> <span class="n">reward</span><span class="o">=</span><span class="s2">"32"</span> <span class="n">type</span><span class="o">=</span><span class="s2">"stone_pickaxe"</span> <span class="o">/&gt;</span>
<span class="o">&lt;</span><span class="no">Item</span> <span class="n">reward</span><span class="o">=</span><span class="s2">"64"</span> <span class="n">type</span><span class="o">=</span><span class="s2">"iron_ore"</span> <span class="o">/&gt;</span>
<span class="o">&lt;</span><span class="no">Item</span> <span class="n">reward</span><span class="o">=</span><span class="s2">"128"</span> <span class="n">type</span><span class="o">=</span><span class="s2">"iron_ingot"</span> <span class="o">/&gt;</span>
<span class="o">&lt;</span><span class="no">Item</span> <span class="n">reward</span><span class="o">=</span><span class="s2">"256"</span> <span class="n">type</span><span class="o">=</span><span class="s2">"iron_pickaxe"</span> <span class="o">/&gt;</span>
<span class="o">&lt;</span><span class="no">Item</span> <span class="n">reward</span><span class="o">=</span><span class="s2">"1024"</span> <span class="n">type</span><span class="o">=</span><span class="s2">"diamond"</span> <span class="o">/&gt;</span>
</code></pre></div></div>

<h2 id="observation-space"><strong>Observation Space</strong></h2>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">Dict</span><span class="p">({</span>
    <span class="s2">"equipped_items"</span><span class="p">:</span> <span class="p">{</span>
            <span class="s2">"mainhand"</span><span class="p">:</span> <span class="p">{</span>
                    <span class="s2">"damage"</span><span class="p">:</span> <span class="s2">"Box(low=-1, high=1562, shape=())"</span><span class="p">,</span>
                    <span class="s2">"maxDamage"</span><span class="p">:</span> <span class="s2">"Box(low=-1, high=1562, shape=())"</span><span class="p">,</span>
                    <span class="s2">"type"</span><span class="p">:</span> <span class="s2">"Enum(air,iron_axe,iron_pickaxe,none,other,stone_axe,stone_pickaxe,wooden_axe,wooden_pickaxe)"</span>
            <span class="p">}</span>
    <span class="p">},</span>
    <span class="s2">"inventory"</span><span class="p">:</span> <span class="p">{</span>
            <span class="s2">"coal"</span><span class="p">:</span> <span class="s2">"Box(low=0, high=2304, shape=())"</span><span class="p">,</span>
            <span class="s2">"cobblestone"</span><span class="p">:</span> <span class="s2">"Box(low=0, high=2304, shape=())"</span><span class="p">,</span>
            <span class="s2">"crafting_table"</span><span class="p">:</span> <span class="s2">"Box(low=0, high=2304, shape=())"</span><span class="p">,</span>
            <span class="s2">"dirt"</span><span class="p">:</span> <span class="s2">"Box(low=0, high=2304, shape=())"</span><span class="p">,</span>
            <span class="s2">"furnace"</span><span class="p">:</span> <span class="s2">"Box(low=0, high=2304, shape=())"</span><span class="p">,</span>
            <span class="s2">"iron_axe"</span><span class="p">:</span> <span class="s2">"Box(low=0, high=2304, shape=())"</span><span class="p">,</span>
            <span class="s2">"iron_ingot"</span><span class="p">:</span> <span class="s2">"Box(low=0, high=2304, shape=())"</span><span class="p">,</span>
            <span class="s2">"iron_ore"</span><span class="p">:</span> <span class="s2">"Box(low=0, high=2304, shape=())"</span><span class="p">,</span>
            <span class="s2">"iron_pickaxe"</span><span class="p">:</span> <span class="s2">"Box(low=0, high=2304, shape=())"</span><span class="p">,</span>
            <span class="s2">"log"</span><span class="p">:</span> <span class="s2">"Box(low=0, high=2304, shape=())"</span><span class="p">,</span>
            <span class="s2">"planks"</span><span class="p">:</span> <span class="s2">"Box(low=0, high=2304, shape=())"</span><span class="p">,</span>
            <span class="s2">"stick"</span><span class="p">:</span> <span class="s2">"Box(low=0, high=2304, shape=())"</span><span class="p">,</span>
            <span class="s2">"stone"</span><span class="p">:</span> <span class="s2">"Box(low=0, high=2304, shape=())"</span><span class="p">,</span>
            <span class="s2">"stone_axe"</span><span class="p">:</span> <span class="s2">"Box(low=0, high=2304, shape=())"</span><span class="p">,</span>
            <span class="s2">"stone_pickaxe"</span><span class="p">:</span> <span class="s2">"Box(low=0, high=2304, shape=())"</span><span class="p">,</span>
            <span class="s2">"torch"</span><span class="p">:</span> <span class="s2">"Box(low=0, high=2304, shape=())"</span><span class="p">,</span>
            <span class="s2">"wooden_axe"</span><span class="p">:</span> <span class="s2">"Box(low=0, high=2304, shape=())"</span><span class="p">,</span>
            <span class="s2">"wooden_pickaxe"</span><span class="p">:</span> <span class="s2">"Box(low=0, high=2304, shape=())"</span>
    <span class="p">},</span>
    <span class="s2">"pov"</span><span class="p">:</span> <span class="s2">"Box(low=0, high=255, shape=(64, 64, 3))"</span>
<span class="p">})</span>
</code></pre></div></div>

<h2 id="action-space"><strong>Action Space</strong></h2>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">Dict</span><span class="p">({</span>
    <span class="s2">"attack"</span><span class="p">:</span> <span class="s2">"Discrete(2)"</span><span class="p">,</span>
    <span class="s2">"back"</span><span class="p">:</span> <span class="s2">"Discrete(2)"</span><span class="p">,</span>
    <span class="s2">"camera"</span><span class="p">:</span> <span class="s2">"Box(low=-180.0, high=180.0, shape=(2,))"</span><span class="p">,</span>
    <span class="s2">"craft"</span><span class="p">:</span> <span class="s2">"Enum(crafting_table,none,planks,stick,torch)"</span><span class="p">,</span>
    <span class="s2">"equip"</span><span class="p">:</span> <span class="s2">"Enum(air,iron_axe,iron_pickaxe,none,stone_axe,stone_pickaxe,wooden_axe,wooden_pickaxe)"</span><span class="p">,</span>
    <span class="s2">"forward"</span><span class="p">:</span> <span class="s2">"Discrete(2)"</span><span class="p">,</span>
    <span class="s2">"jump"</span><span class="p">:</span> <span class="s2">"Discrete(2)"</span><span class="p">,</span>
    <span class="s2">"left"</span><span class="p">:</span> <span class="s2">"Discrete(2)"</span><span class="p">,</span>
    <span class="s2">"nearbyCraft"</span><span class="p">:</span> <span class="s2">"Enum(furnace,iron_axe,iron_pickaxe,none,stone_axe,stone_pickaxe,wooden_axe,wooden_pickaxe)"</span><span class="p">,</span>
    <span class="s2">"nearbySmelt"</span><span class="p">:</span> <span class="s2">"Enum(coal,iron_ingot,none)"</span><span class="p">,</span>
    <span class="s2">"place"</span><span class="p">:</span> <span class="s2">"Enum(cobblestone,crafting_table,dirt,furnace,none,stone,torch)"</span><span class="p">,</span>
    <span class="s2">"right"</span><span class="p">:</span> <span class="s2">"Discrete(2)"</span><span class="p">,</span>
    <span class="s2">"sneak"</span><span class="p">:</span> <span class="s2">"Discrete(2)"</span><span class="p">,</span>
    <span class="s2">"sprint"</span><span class="p">:</span> <span class="s2">"Discrete(2)"</span>
<span class="p">})</span>
</code></pre></div></div>

<h2 id="usage"><strong>Usage</strong></h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">gym</span>
<span class="kn">import</span> <span class="nn">minerl</span>

<span class="c1"># Run a random agent through the environment
</span><span class="n">env</span> <span class="o">=</span> <span class="n">gym</span><span class="p">.</span><span class="n">make</span><span class="p">(</span><span class="s">"MineRLObtainDiamond-v0"</span><span class="p">)</span>  <span class="c1"># A MineRLObtainDiamond-v0 env
</span>
<span class="n">obs</span> <span class="o">=</span> <span class="n">env</span><span class="p">.</span><span class="n">reset</span><span class="p">()</span>
<span class="n">done</span> <span class="o">=</span> <span class="bp">False</span>

<span class="k">while</span> <span class="ow">not</span> <span class="n">done</span><span class="p">:</span>
    <span class="c1"># Take a no-op through the environment.
</span>    <span class="n">obs</span><span class="p">,</span> <span class="n">rew</span><span class="p">,</span> <span class="n">done</span><span class="p">,</span> <span class="n">_</span> <span class="o">=</span> <span class="n">env</span><span class="p">.</span><span class="n">step</span><span class="p">(</span><span class="n">env</span><span class="p">.</span><span class="n">action_space</span><span class="p">.</span><span class="n">noop</span><span class="p">())</span>
    <span class="c1"># Do something
</span>
<span class="c1">######################################
</span>
<span class="c1"># Sample some data from the dataset!
</span><span class="n">data</span> <span class="o">=</span> <span class="n">minerl</span><span class="p">.</span><span class="n">data</span><span class="p">.</span><span class="n">make</span><span class="p">(</span><span class="s">"MineRLObtainDiamond-v0"</span><span class="p">)</span>

<span class="c1"># Iterate through a single epoch using sequences of at most 32 steps
</span><span class="k">for</span> <span class="n">obs</span><span class="p">,</span> <span class="n">rew</span><span class="p">,</span> <span class="n">done</span><span class="p">,</span> <span class="n">act</span> <span class="ow">in</span> <span class="n">data</span><span class="p">.</span><span class="n">batch_iter</span><span class="p">(</span><span class="n">num_epochs</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">batch_size</span><span class="o">=</span><span class="mi">32</span><span class="p">):</span>
    <span class="c1"># Do something
</span></code></pre></div></div>

<h2 id="presentation"><strong>Presentation</strong></h2>
<p>The overall work is presented in the below video (Korean).</p>

<iframe width="650" height="335" src="https://www.youtube.com/embed/QeQHPlEHI_o" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen=""></iframe>
<p><br /></p>

<p>Our main idea was to adopt InfoGAIL algorithm instead of using generic RL algorithms to train the agent since we were able to utilize the expert’s demonstration dataset.</p>

<p><img src="/assets/img/InfoGAIL/abstract.png" width="70%" height="70%" alt="Markdown Monster icon" style="float: center;" /></p>

<p>For more details about InfoGAIL algorithm, please refer to my paper review about this: <a href="/study/2021/11/26/InfoGAIL/">LINK</a></p>

<p>And for more detailed report, please email me to ybkim95@yonsei.ac.kr.</p>

<h2 id="result"><strong>Result</strong></h2>

<p>Our team got 1st place with popularity award for the Software Capstone Project.</p>

<p><img src="/assets/img/photo/award.png" width="50%" height="50%" alt="Markdown Monster icon" style="float: center;" /></p>
:ET